@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 220 15% 98%;

  --foreground: 220 15% 15%;

  --border: 220 10% 90%;

  --card: 220 15% 96%;

  --card-foreground: 220 15% 15%;

  --card-border: 220 10% 88%;

  --sidebar: 220 15% 94%;

  --sidebar-foreground: 220 15% 15%;

  --sidebar-border: 220 10% 86%;

  --sidebar-primary: 220 85% 65%;

  --sidebar-primary-foreground: 220 15% 98%;

  --sidebar-accent: 220 10% 88%;

  --sidebar-accent-foreground: 220 15% 15%;

  --sidebar-ring: 220 85% 65%;

  --popover: 220 15% 92%;

  --popover-foreground: 220 15% 15%;

  --popover-border: 220 10% 84%;

  --primary: 220 85% 65%;

  --primary-foreground: 220 15% 98%;

  --secondary: 220 10% 88%;

  --secondary-foreground: 220 15% 15%;

  --muted: 220 8% 85%;

  --muted-foreground: 220 12% 35%;

  --accent: 220 8% 90%;

  --accent-foreground: 220 15% 15%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 75%;
  --ring: 220 85% 65%;
  --chart-1: 220 85% 65%;
  --chart-2: 150 60% 55%;
  --chart-3: 240 70% 45%;
  --chart-4: 280 60% 60%;
  --chart-5: 30 80% 60%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 10% 10% / 0.02);
  --shadow-xs: 0px 2px 0px 0px hsl(220 10% 10% / 0.02);
  --shadow-sm: 0px 2px 0px 0px hsl(220 10% 10% / 0.03), 0px 1px 2px -1px hsl(220 10% 10% / 0.04);
  --shadow: 0px 2px 0px 0px hsl(220 10% 10% / 0.03), 0px 1px 2px -1px hsl(220 10% 10% / 0.04);
  --shadow-md: 0px 2px 0px 0px hsl(220 10% 10% / 0.03), 0px 2px 4px -1px hsl(220 10% 10% / 0.05);
  --shadow-lg: 0px 2px 0px 0px hsl(220 10% 10% / 0.03), 0px 4px 6px -1px hsl(220 10% 10% / 0.06);
  --shadow-xl: 0px 2px 0px 0px hsl(220 10% 10% / 0.03), 0px 8px 10px -1px hsl(220 10% 10% / 0.07);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 10% 10% / 0.04);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 25% 12%;

  --foreground: 220 10% 95%;

  --border: 220 15% 20%;

  --card: 220 25% 14%;

  --card-foreground: 220 10% 95%;

  --card-border: 220 15% 22%;

  --sidebar: 220 25% 16%;

  --sidebar-foreground: 220 10% 95%;

  --sidebar-border: 220 15% 24%;

  --sidebar-primary: 220 85% 65%;

  --sidebar-primary-foreground: 220 10% 95%;

  --sidebar-accent: 220 15% 22%;

  --sidebar-accent-foreground: 220 10% 95%;

  --sidebar-ring: 220 85% 65%;

  --popover: 220 25% 18%;

  --popover-foreground: 220 10% 95%;

  --popover-border: 220 15% 26%;

  --primary: 220 85% 65%;

  --primary-foreground: 220 10% 95%;

  --secondary: 220 15% 22%;

  --secondary-foreground: 220 10% 95%;

  --muted: 220 12% 20%;

  --muted-foreground: 220 10% 75%;

  --accent: 220 10% 18%;

  --accent-foreground: 220 10% 95%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 220 10% 95%;

  --input: 220 15% 30%;
  --ring: 220 85% 65%;
  --chart-1: 220 85% 75%;
  --chart-2: 150 60% 65%;
  --chart-3: 240 70% 55%;
  --chart-4: 280 60% 70%;
  --chart-5: 30 80% 70%;

  --shadow-2xs: 0px 2px 0px 0px hsl(220 25% 5% / 0.20);
  --shadow-xs: 0px 2px 0px 0px hsl(220 25% 5% / 0.20);
  --shadow-sm: 0px 2px 0px 0px hsl(220 25% 5% / 0.25), 0px 1px 2px -1px hsl(220 25% 5% / 0.30);
  --shadow: 0px 2px 0px 0px hsl(220 25% 5% / 0.25), 0px 1px 2px -1px hsl(220 25% 5% / 0.30);
  --shadow-md: 0px 2px 0px 0px hsl(220 25% 5% / 0.25), 0px 2px 4px -1px hsl(220 25% 5% / 0.35);
  --shadow-lg: 0px 2px 0px 0px hsl(220 25% 5% / 0.25), 0px 4px 6px -1px hsl(220 25% 5% / 0.40);
  --shadow-xl: 0px 2px 0px 0px hsl(220 25% 5% / 0.25), 0px 8px 10px -1px hsl(220 25% 5% / 0.45);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 25% 5% / 0.30);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    background-image: radial-gradient(circle at 1px 1px, hsl(var(--muted-foreground) / 0.12) 1.5px, transparent 0);
    background-size: 88px 88px;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Reusable dotted background utility */
  .bg-dots {
    background-image: radial-gradient(circle at 1px 1px, hsl(var(--muted-foreground) / 0.12) 1.5px, transparent 0);
    background-size: 88px 88px;
  }

  /* Fun animations */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px hsl(var(--primary) / 0.3); }
    50% { box-shadow: 0 0 40px hsl(var(--primary) / 0.6); }
  }

  @keyframes rotate-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes bounce-in {
    0% { transform: scale(0.3) rotate(-180deg); opacity: 0; }
    50% { transform: scale(1.05) rotate(-10deg); }
    70% { transform: scale(0.9) rotate(5deg); }
    100% { transform: scale(1) rotate(0deg); opacity: 1; }
  }

  @keyframes slide-up {
    from { transform: translateY(30px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes wiggle {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(1deg); }
    75% { transform: rotate(-1deg); }
  }

  .float-animation {
    animation: float 6s ease-in-out infinite;
  }

  .pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  .rotate-slow {
    animation: rotate-slow 20s linear infinite;
  }

  .bounce-in {
    animation: bounce-in 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .slide-up {
    animation: slide-up 0.6s ease-out;
  }

  .wiggle:hover {
    animation: wiggle 0.5s ease-in-out;
  }

  /* Enhanced shadows */
  .shadow-magical {
    box-shadow: 
      0 4px 14px 0 hsl(var(--primary) / 0.39),
      0 2px 6px 0 hsl(var(--primary) / 0.12),
      inset 0 1px 0 hsl(var(--primary) / 0.1);
  }

  .shadow-neon {
    box-shadow: 
      0 0 5px hsl(var(--primary) / 0.5),
      0 0 25px hsl(var(--primary) / 0.3),
      0 0 50px hsl(var(--primary) / 0.1);
  }

  .shadow-layered {
    box-shadow: 
      0 1px 3px hsl(var(--foreground) / 0.1),
      0 4px 6px hsl(var(--foreground) / 0.07),
      0 10px 20px hsl(var(--foreground) / 0.04),
      0 25px 50px hsl(var(--foreground) / 0.02);
  }

  /* Decorative borders */
  .border-gradient {
    position: relative;
    background: linear-gradient(hsl(var(--background)), hsl(var(--background))) padding-box,
                linear-gradient(45deg, hsl(var(--primary)), hsl(var(--primary) / 0.3)) border-box;
    border: 2px solid transparent;
  }

  .border-dashed-animated {
    border: 2px dashed hsl(var(--primary) / 0.3);
    background-image: 
      linear-gradient(90deg, transparent 50%, hsl(var(--primary) / 0.1) 50%);
    background-size: 10px 10px;
    animation: border-move 20s linear infinite;
  }

  @keyframes border-move {
    0% { background-position: 0 0; }
    100% { background-position: 10px 10px; }
  }

  .border-glowing {
    border: 1px solid hsl(var(--primary) / 0.5);
    box-shadow: 
      0 0 10px hsl(var(--primary) / 0.3),
      inset 0 0 10px hsl(var(--primary) / 0.1);
  }

  /* Interactive elements */
  .interactive-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center;
  }

  .interactive-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 20px 40px hsl(var(--foreground) / 0.1),
      0 0 30px hsl(var(--primary) / 0.2);
  }

  .tilt-on-hover {
    transition: transform 0.3s ease;
  }

  .tilt-on-hover:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg) scale(1.02);
  }

  /* Additional fun effects */
  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  .shimmer {
    background: linear-gradient(
      90deg,
      transparent,
      hsl(var(--primary) / 0.4),
      transparent
    );
    background-size: 200% 100%;
    animation: shimmer 3s infinite;
  }

  .glow-on-hover {
    transition: all 0.3s ease;
  }

  .glow-on-hover:hover {
    text-shadow: 0 0 10px hsl(var(--primary) / 0.8);
    filter: brightness(1.2);
  }

  /* Morphing borders */
  @keyframes morph-border {
    0%, 100% { border-radius: 20% 80% 80% 20% / 20% 80% 20% 80%; }
    25% { border-radius: 80% 20% 20% 80% / 80% 20% 80% 20%; }
    50% { border-radius: 20% 80% 80% 20% / 80% 20% 80% 20%; }
    75% { border-radius: 80% 20% 20% 80% / 20% 80% 20% 80%; }
  }

  .morph-border {
    animation: morph-border 8s ease-in-out infinite;
  }

  /* Particle effect */
  .particle-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(2px 2px at 20px 30px, hsl(var(--primary) / 0.3), transparent),
      radial-gradient(2px 2px at 40px 70px, hsl(var(--primary) / 0.2), transparent),
      radial-gradient(1px 1px at 90px 40px, hsl(var(--primary) / 0.4), transparent),
      radial-gradient(1px 1px at 130px 80px, hsl(var(--primary) / 0.3), transparent);
    background-repeat: repeat;
    background-size: 150px 150px;
    animation: particle-float 20s linear infinite;
    pointer-events: none;
  }

  @keyframes particle-float {
    0% { transform: translateY(0px); }
    100% { transform: translateY(-150px); }
  }

  /* Enhanced interactive cards */
  .super-interactive {
    position: relative;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .super-interactive::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      hsl(var(--primary) / 0.1),
      transparent
    );
    transition: left 0.6s;
  }

  .super-interactive:hover::before {
    left: 100%;
  }

  .super-interactive:hover {
    transform: translateY(-12px) scale(1.03);
    box-shadow: 
      0 25px 50px hsl(var(--foreground) / 0.15),
      0 0 40px hsl(var(--primary) / 0.3);
  }
}